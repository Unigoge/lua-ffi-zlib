name: Tests

on:
  pull_request:
    paths-ignore:
    - '*.md'
  push:
    branches:
    - master
    - release/*
    paths-ignore:
    - '*.md'


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  tests:
    name: Tests
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
        # TODO: arm64
        # latest and one version older for valgrind and perf test
        - nginx: "1.19.9"
          extras: "valgrind"
          lua_nginx_module: "v0.10.20"
          lua_resty_core: "v0.1.22"
        - nginx: "1.21.4"
          extras: "valgrind perf"
          lua_nginx_module: "v0.10.25"
          lua_resty_core: "v0.1.27"

    env:
      JOBS: 3
      SH: bash
      NGX_BUILD_JOBS: 3
      BASE_PATH: /home/runner/work/cache
      LUAJIT_PREFIX: /home/runner/work/cache/luajit21
      LUAJIT_LIB: /home/runner/work/cache/luajit21/lib
      LUAJIT_INC: /home/runner/work/cache/luajit21/include/luajit-2.1
      LUA_INCLUDE_DIR: /home/runner/work/cache/luajit21/include/luajit-2.1
      OPENSSL_PREFIX: /home/runner/work/cache/ssl
      # lib64 since openssl 3.0
      OPENSSL_LIB: /home/runner/work/cache/ssl/lib64
      OPENSSL_INC: /home/runner/work/cache/ssl/include
      TEST_NGINX_SLEEP: 0.005
      TEST_NGINX_RANDOMIZE: 1
      LUACHECK_VER: 0.21.1
      CC: gcc
      NGX_BUILD_CC: gcc

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    
    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: |
          /home/runner/work/cache
        key: ${{ runner.os }}-${{ hashFiles('**/tests.yml') }}-nginx-${{ matrix.nginx }}-openssl-${{ matrix.openssl }}-${{ matrix.fips2 }}-boringssl-${{ matrix.boringssl }}

    - name: Setup tools
      run: |
        sudo apt-get update
        sudo apt-get install -qq -y cpanminus axel ca-certificates valgrind haveged
        mkdir -p $OPENSSL_PREFIX $LUAJIT_PREFIX
        # perl cache
        pushd /home/runner/work/cache
        if [ ! -e perl ]; then sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1); cp -r /usr/local/share/perl/ .; else sudo cp -r perl /usr/local/share; fi
        # build tools at parent directory of cache
        cd ..
        git clone https://github.com/openresty/openresty.git ./openresty
        git clone https://github.com/openresty/nginx-devel-utils.git
        git clone https://github.com/simpl/ngx_devel_kit.git ./ndk-nginx-module
        git clone https://github.com/openresty/lua-nginx-module.git ./lua-nginx-module -b ${{ matrix.lua_nginx_module }}
        git clone https://github.com/openresty/no-pool-nginx.git ./no-pool-nginx
        # lua libraries at parent directory of current repository
        popd
        git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core -b ${{ matrix.lua_resty_core }}
        git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache

    - name: Build LuaJIT
      env:
        LUAJIT_CC_OPTS: ${{ matrix.luajit_cc_opts }}
      run: |
        if [[ "${{ matrix.extras }}" == *valgrind* ]]; then LUAJIT_CC_OPTS="$LUAJIT_CC_OPTS -DLUAJIT_NUMMODE=2 -DLUAJIT_USE_SYSMALLOC -O0"; fi
        export
        cd $LUAJIT_PREFIX
        if [ ! -e luajit2 ]; then git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git; fi
        cd luajit2
        make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS="-DLUA_USE_APICHECK -DLUA_USE_ASSERT -DLUAJIT_ENABLE_LUA52COMPAT ${{ matrix.luajit_cc_opts }}" > build.log 2>&1 || (cat build.log && exit 1)
        make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)

    - name: Build lua-cjson
      run: |
        if [ ! -e lua-cjson ]; then git clone https://github.com/openresty/lua-cjson.git ./lua-cjson; fi
        pushd ./lua-cjson && make && sudo PATH=$PATH make install && popd

    - name: Build Nginx
      env:
        NGINX_CC_OPTS: ${{ matrix.nginx_cc_opts }}
      run: |
        if [[ "${{ matrix.extras }}" == *valgrind* ]]; then NGINX_CC_OPTS="$NGINX_CC_OPTS -O0"; fi
        export PATH=$BASE_PATH/work/nginx/sbin:$BASE_PATH/../nginx-devel-utils:$PATH
        export LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
        export NGX_LUA_LOC=$BASE_PATH/../lua-nginx-module
        export NGX_STREAM_LUA_LOC=$BASE_PATH/../stream-lua-nginx-module
        export
        cd $BASE_PATH
        if [ ! -e work ]; then ngx-build ${{ matrix.nginx }} --add-module=../ndk-nginx-module --add-module=../lua-nginx-module  --with-cc-opt="$NGINX_CC_OPTS" --with-debug > build.log 2>&1 || (cat build.log && exit 1); fi
        nginx -V
        ldd `which nginx`|grep -E 'luajit|pcre'
      
    - name: Remove dev packages
      run: |
        sudo apt-get purge -y zlib1g-dev libc-dev

    - name: Run test with LuaJIT
      run: |
        export LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
        export PATH=$LUAJIT_PREFIX/bin:$BASE_PATH/work/nginx/sbin:$PATH

        echo "Run test with LuaJIT"
        luajit test.lua $BASE_PATH/work/nginx/sbin/nginx 65536000

    - name: Run test with resty-cli
      run: |
        wget -O resty https://github.com/openresty/resty-cli/raw/master/bin/resty
        chmod +x resty

        export LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
        export PATH=$BASE_PATH/work/nginx/sbin:$PATH

        ./resty --no-stream test.lua $BASE_PATH/work/nginx/sbin/nginx 65536000

    - name: Run test with resty-cli (valgrind)
      if: contains(matrix.extras, 'valgrind')
      run: |
        wget -O resty https://github.com/openresty/resty-cli/raw/master/bin/resty
        chmod +x resty

        export LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
        export PATH=$BASE_PATH/work/nginx/sbin:$PATH

        ./resty --no-stream --valgrind test.lua $BASE_PATH/work/nginx/sbin/nginx 65536000
